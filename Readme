Fake News Detection Project üì∞üîç
This project explores a multimodal approach to detecting fake news by leveraging natural language processing (NLP) and machine learning (ML) techniques. By combining robust preprocessing methods, multiple machine learning models, and visual insights, the system tackles the growing challenge of misinformation in digital media.

üöÄ Features
Comprehensive Machine Learning Models

Integrated multiple algorithms: LSTM, SVM, KNN, Naive Bayes, Random Forest, Decision Tree, and Feature Extraction for comparative analysis.
Models fine-tuned to maximize accuracy and performance.
Advanced Data Preprocessing

Lemmatization to normalize textual data.
Oversampling techniques like SMOTE to handle imbalanced datasets and improve model robustness.
Sweetviz for Dataset Insights

Generated interactive HTML reports using Sweetviz to analyze dataset features, identify missing values, and explore feature distributions.
Simplifies understanding of dataset characteristics through easy-to-read comparisons and visualizations.
Data Analysis and Visualization

Included confusion matrices and training history plots to evaluate model performance.
High Accuracy and Robustness

Results underscore the effectiveness of combining multiple models and preprocessing techniques.
üõ†Ô∏è Technologies Used
Programming Language: Python
Machine Learning Models: LSTM, SVM, KNN, Naive Bayes, Random Forest, Decision Tree
Libraries and Frameworks: TensorFlow, scikit-learn, NLTK, Pandas, Sweetviz
Visualization Tools: Sweetviz, Matplotlib, Seaborn
Preprocessing Techniques: Lemmatization, Oversampling (SMOTE)


üìä Key Components
Sweetviz

Generates detailed, interactive HTML reports for exploratory data analysis.
Includes feature correlations, missing value identification, and distribution analysis.
Machine Learning Models

Applied multiple ML models, including both traditional (SVM, Random Forest) and deep learning (LSTM).
Preprocessing Techniques

Lemmatization: Normalized text for improved model understanding.
Oversampling (SMOTE): Balanced the dataset to avoid biases during training.
Visual Insights

Confusion matrices and training history plots allow for detailed model evaluation.
üìä Results and Insights
Sweetviz reports simplify understanding dataset distributions, missing values, and correlations.
Oversampling significantly enhanced model performance by addressing class imbalances.
Diverse ML models achieved high accuracy, with results visualized through confusion matrices and training plots.
